function cov_2a6kgtu5yv(){var path="C:\\Users\\user\\OneDrive - Temasek Polytechnic\\Desktop\\devops\\DVOPS-part1\\tests\\timeOut.test.js";var hash="8b88b3a20c4a25180c58fdb477a2d0d06ff00cd9";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\user\\OneDrive - Temasek Polytechnic\\Desktop\\devops\\DVOPS-part1\\tests\\timeOut.test.js",statementMap:{"0":{start:{line:1,column:11},end:{line:1,column:33}},"1":{start:{line:2,column:40},end:{line:2,column:68}},"2":{start:{line:3,column:19},end:{line:3,column:34}},"3":{start:{line:5,column:0},end:{line:167,column:3}},"4":{start:{line:7,column:28},end:{line:7,column:51}},"5":{start:{line:9,column:2},end:{line:13,column:5}},"6":{start:{line:11,column:22},end:{line:11,column:67}},"7":{start:{line:12,column:4},end:{line:12,column:61}},"8":{start:{line:15,column:2},end:{line:21,column:5}},"9":{start:{line:17,column:26},end:{line:17,column:70}},"10":{start:{line:18,column:4},end:{line:18,column:66}},"11":{start:{line:20,column:4},end:{line:20,column:39}},"12":{start:{line:23,column:2},end:{line:58,column:5}},"13":{start:{line:24,column:23},end:{line:24,column:28}},"14":{start:{line:27,column:16},end:{line:29,column:5}},"15":{start:{line:30,column:16},end:{line:38,column:5}},"16":{start:{line:32,column:8},end:{line:32,column:31}},"17":{start:{line:33,column:8},end:{line:33,column:20}},"18":{start:{line:36,column:8},end:{line:36,column:33}},"19":{start:{line:41,column:31},end:{line:41,column:65}},"20":{start:{line:44,column:4},end:{line:44,column:38}},"21":{start:{line:47,column:4},end:{line:47,column:41}},"22":{start:{line:48,column:4},end:{line:48,column:85}},"23":{start:{line:51,column:30},end:{line:51,column:64}},"24":{start:{line:54,column:29},end:{line:54,column:83}},"25":{start:{line:54,column:60},end:{line:54,column:82}},"26":{start:{line:57,column:4},end:{line:57,column:47}},"27":{start:{line:60,column:2},end:{line:104,column:5}},"28":{start:{line:61,column:23},end:{line:61,column:28}},"29":{start:{line:64,column:28},end:{line:66,column:5}},"30":{start:{line:67,column:28},end:{line:75,column:5}},"31":{start:{line:69,column:8},end:{line:69,column:31}},"32":{start:{line:70,column:8},end:{line:70,column:20}},"33":{start:{line:73,column:8},end:{line:73,column:33}},"34":{start:{line:78,column:29},end:{line:80,column:5}},"35":{start:{line:81,column:29},end:{line:89,column:5}},"36":{start:{line:83,column:8},end:{line:83,column:31}},"37":{start:{line:84,column:8},end:{line:84,column:20}},"38":{start:{line:87,column:8},end:{line:87,column:33}},"39":{start:{line:92,column:4},end:{line:92,column:62}},"40":{start:{line:95,column:4},end:{line:95,column:53}},"41":{start:{line:96,column:4},end:{line:96,column:97}},"42":{start:{line:99,column:4},end:{line:99,column:64}},"43":{start:{line:102,column:4},end:{line:102,column:54}},"44":{start:{line:103,column:4},end:{line:103,column:86}},"45":{start:{line:106,column:2},end:{line:141,column:5}},"46":{start:{line:107,column:23},end:{line:107,column:26}},"47":{start:{line:110,column:16},end:{line:112,column:5}},"48":{start:{line:113,column:16},end:{line:121,column:5}},"49":{start:{line:115,column:8},end:{line:115,column:31}},"50":{start:{line:116,column:8},end:{line:116,column:20}},"51":{start:{line:119,column:8},end:{line:119,column:33}},"52":{start:{line:124,column:37},end:{line:124,column:68}},"53":{start:{line:127,column:4},end:{line:127,column:38}},"54":{start:{line:130,column:4},end:{line:130,column:41}},"55":{start:{line:131,column:4},end:{line:131,column:85}},"56":{start:{line:134,column:30},end:{line:134,column:64}},"57":{start:{line:137,column:29},end:{line:137,column:83}},"58":{start:{line:137,column:60},end:{line:137,column:82}},"59":{start:{line:140,column:4},end:{line:140,column:73}},"60":{start:{line:143,column:2},end:{line:166,column:5}},"61":{start:{line:144,column:26},end:{line:144,column:34}},"62":{start:{line:147,column:16},end:{line:149,column:5}},"63":{start:{line:150,column:16},end:{line:158,column:5}},"64":{start:{line:152,column:8},end:{line:152,column:31}},"65":{start:{line:153,column:8},end:{line:153,column:20}},"66":{start:{line:156,column:8},end:{line:156,column:33}},"67":{start:{line:161,column:4},end:{line:161,column:38}},"68":{start:{line:164,column:4},end:{line:164,column:41}},"69":{start:{line:165,column:4},end:{line:165,column:65}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:5,column:38},end:{line:5,column:39}},loc:{start:{line:5,column:50},end:{line:167,column:1}},line:5},"1":{name:"(anonymous_1)",decl:{start:{line:9,column:9},end:{line:9,column:10}},loc:{start:{line:9,column:27},end:{line:13,column:3}},line:9},"2":{name:"(anonymous_2)",decl:{start:{line:15,column:8},end:{line:15,column:9}},loc:{start:{line:15,column:26},end:{line:21,column:3}},line:15},"3":{name:"(anonymous_3)",decl:{start:{line:23,column:61},end:{line:23,column:62}},loc:{start:{line:23,column:79},end:{line:58,column:3}},line:23},"4":{name:"(anonymous_4)",decl:{start:{line:31,column:14},end:{line:31,column:15}},loc:{start:{line:31,column:30},end:{line:34,column:7}},line:31},"5":{name:"(anonymous_5)",decl:{start:{line:35,column:12},end:{line:35,column:13}},loc:{start:{line:35,column:28},end:{line:37,column:7}},line:35},"6":{name:"(anonymous_6)",decl:{start:{line:54,column:52},end:{line:54,column:53}},loc:{start:{line:54,column:60},end:{line:54,column:82}},line:54},"7":{name:"(anonymous_7)",decl:{start:{line:60,column:53},end:{line:60,column:54}},loc:{start:{line:60,column:71},end:{line:104,column:3}},line:60},"8":{name:"(anonymous_8)",decl:{start:{line:68,column:14},end:{line:68,column:15}},loc:{start:{line:68,column:30},end:{line:71,column:7}},line:68},"9":{name:"(anonymous_9)",decl:{start:{line:72,column:12},end:{line:72,column:13}},loc:{start:{line:72,column:28},end:{line:74,column:7}},line:72},"10":{name:"(anonymous_10)",decl:{start:{line:82,column:14},end:{line:82,column:15}},loc:{start:{line:82,column:30},end:{line:85,column:7}},line:82},"11":{name:"(anonymous_11)",decl:{start:{line:86,column:12},end:{line:86,column:13}},loc:{start:{line:86,column:28},end:{line:88,column:7}},line:86},"12":{name:"(anonymous_12)",decl:{start:{line:106,column:59},end:{line:106,column:60}},loc:{start:{line:106,column:77},end:{line:141,column:3}},line:106},"13":{name:"(anonymous_13)",decl:{start:{line:114,column:14},end:{line:114,column:15}},loc:{start:{line:114,column:30},end:{line:117,column:7}},line:114},"14":{name:"(anonymous_14)",decl:{start:{line:118,column:12},end:{line:118,column:13}},loc:{start:{line:118,column:28},end:{line:120,column:7}},line:118},"15":{name:"(anonymous_15)",decl:{start:{line:137,column:52},end:{line:137,column:53}},loc:{start:{line:137,column:60},end:{line:137,column:82}},line:137},"16":{name:"(anonymous_16)",decl:{start:{line:143,column:60},end:{line:143,column:61}},loc:{start:{line:143,column:78},end:{line:166,column:3}},line:143},"17":{name:"(anonymous_17)",decl:{start:{line:151,column:14},end:{line:151,column:15}},loc:{start:{line:151,column:30},end:{line:154,column:7}},line:151},"18":{name:"(anonymous_18)",decl:{start:{line:155,column:12},end:{line:155,column:13}},loc:{start:{line:155,column:28},end:{line:157,column:7}},line:155}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"8b88b3a20c4a25180c58fdb477a2d0d06ff00cd9"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2a6kgtu5yv=function(){return actualCoverage;};}return actualCoverage;}cov_2a6kgtu5yv();const fs=(cov_2a6kgtu5yv().s[0]++,require('fs').promises);const{updateUserTimeOut,readJSON}=(cov_2a6kgtu5yv().s[1]++,require('../utils/UserUtil'));// Adjust the path as needed
const{expect}=(cov_2a6kgtu5yv().s[2]++,require('chai'));cov_2a6kgtu5yv().s[3]++;describe('Testing Time Out function',function(){cov_2a6kgtu5yv().f[0]++;// Create a temporary copy of the users.json file for testing
const testUsersFilePath=(cov_2a6kgtu5yv().s[4]++,'utils/test-users.json');cov_2a6kgtu5yv().s[5]++;before(async function(){cov_2a6kgtu5yv().f[1]++;// Copy the contents of users.json to test-users.json for testing
const usersData=(cov_2a6kgtu5yv().s[6]++,await fs.readFile('utils/users.json','utf8'));cov_2a6kgtu5yv().s[7]++;await fs.writeFile(testUsersFilePath,usersData,'utf8');});cov_2a6kgtu5yv().s[8]++;after(async function(){cov_2a6kgtu5yv().f[2]++;// Clean up: restore the original users.json file
const testUsersData=(cov_2a6kgtu5yv().s[9]++,await fs.readFile(testUsersFilePath,'utf8'));cov_2a6kgtu5yv().s[10]++;await fs.writeFile('utils/users.json',testUsersData,'utf8');// Delete the temporary test-users.json file
cov_2a6kgtu5yv().s[11]++;await fs.unlink(testUsersFilePath);});cov_2a6kgtu5yv().s[12]++;it('should successfully update the user time on time out',async function(){cov_2a6kgtu5yv().f[3]++;const testUserId=(cov_2a6kgtu5yv().s[13]++,'316');// Replace with an actual user ID for your test
// Mock the request and response objects
const req=(cov_2a6kgtu5yv().s[14]++,{params:{id:testUserId}});const res=(cov_2a6kgtu5yv().s[15]++,{status:function(code){cov_2a6kgtu5yv().f[4]++;cov_2a6kgtu5yv().s[16]++;this.statusCode=code;cov_2a6kgtu5yv().s[17]++;return this;},json:function(data){cov_2a6kgtu5yv().f[5]++;cov_2a6kgtu5yv().s[18]++;this.responseData=data;}});// Read the content of users.json before the time out operation
const usersBeforeTimeOut=(cov_2a6kgtu5yv().s[19]++,await readJSON('utils/users.json'));// Call the updateUserTimeOut function
cov_2a6kgtu5yv().s[20]++;await updateUserTimeOut(req,res);// Check the response status code and message
cov_2a6kgtu5yv().s[21]++;expect(res.statusCode).to.equal(200);cov_2a6kgtu5yv().s[22]++;expect(res.responseData.message).to.equal('User time out updated successfully!');// Read the content of users.json after the time out operation
const usersAfterTimeOut=(cov_2a6kgtu5yv().s[23]++,await readJSON('utils/users.json'));// Find the user in the updated data
const userAfterTimeOut=(cov_2a6kgtu5yv().s[24]++,usersAfterTimeOut.find(user=>{cov_2a6kgtu5yv().f[6]++;cov_2a6kgtu5yv().s[25]++;return user.id===testUserId;}));// Check that the user's time_out property has been updated
cov_2a6kgtu5yv().s[26]++;expect(userAfterTimeOut.time_out).to.exist;});cov_2a6kgtu5yv().s[27]++;it('should handle duplicate "time out" operation',async function(){cov_2a6kgtu5yv().f[7]++;const testUserId=(cov_2a6kgtu5yv().s[28]++,'317');// Replace with an actual user ID for your test
// Mock the request and response objects for the first time out operation
const firstTimeOutReq=(cov_2a6kgtu5yv().s[29]++,{params:{id:testUserId}});const firstTimeOutRes=(cov_2a6kgtu5yv().s[30]++,{status:function(code){cov_2a6kgtu5yv().f[8]++;cov_2a6kgtu5yv().s[31]++;this.statusCode=code;cov_2a6kgtu5yv().s[32]++;return this;},json:function(data){cov_2a6kgtu5yv().f[9]++;cov_2a6kgtu5yv().s[33]++;this.responseData=data;}});// Mock the request and response objects for the second time out operation
const secondTimeOutReq=(cov_2a6kgtu5yv().s[34]++,{params:{id:testUserId}});const secondTimeOutRes=(cov_2a6kgtu5yv().s[35]++,{status:function(code){cov_2a6kgtu5yv().f[10]++;cov_2a6kgtu5yv().s[36]++;this.statusCode=code;cov_2a6kgtu5yv().s[37]++;return this;},json:function(data){cov_2a6kgtu5yv().f[11]++;cov_2a6kgtu5yv().s[38]++;this.responseData=data;}});// Call the updateUserTimeOut function for the first time out operation
cov_2a6kgtu5yv().s[39]++;await updateUserTimeOut(firstTimeOutReq,firstTimeOutRes);// Check the response status code and message for the first time out operation
cov_2a6kgtu5yv().s[40]++;expect(firstTimeOutRes.statusCode).to.equal(200);cov_2a6kgtu5yv().s[41]++;expect(firstTimeOutRes.responseData.message).to.equal('User time out updated successfully!');// Call the updateUserTimeOut function for the second time out operation
cov_2a6kgtu5yv().s[42]++;await updateUserTimeOut(secondTimeOutReq,secondTimeOutRes);// Check the response status code and message for the second time out operation
cov_2a6kgtu5yv().s[43]++;expect(secondTimeOutRes.statusCode).to.equal(400);cov_2a6kgtu5yv().s[44]++;expect(secondTimeOutRes.responseData.message).to.equal('User already timed out!');});cov_2a6kgtu5yv().s[45]++;it('should record the correct time when user times out',async function(){cov_2a6kgtu5yv().f[12]++;const testUserId=(cov_2a6kgtu5yv().s[46]++,'1');// Replace with an actual user ID for your test
// Mock the request and response objects
const req=(cov_2a6kgtu5yv().s[47]++,{params:{id:testUserId}});const res=(cov_2a6kgtu5yv().s[48]++,{status:function(code){cov_2a6kgtu5yv().f[13]++;cov_2a6kgtu5yv().s[49]++;this.statusCode=code;cov_2a6kgtu5yv().s[50]++;return this;},json:function(data){cov_2a6kgtu5yv().f[14]++;cov_2a6kgtu5yv().s[51]++;this.responseData=data;}});// Record the current time before the time out operation
const currentTimeBeforeTimeOut=(cov_2a6kgtu5yv().s[52]++,new Date().toLocaleTimeString());// Call the updateUserTimeOut function
cov_2a6kgtu5yv().s[53]++;await updateUserTimeOut(req,res);// Check the response status code and message
cov_2a6kgtu5yv().s[54]++;expect(res.statusCode).to.equal(200);cov_2a6kgtu5yv().s[55]++;expect(res.responseData.message).to.equal('User time out updated successfully!');// Read the content of users.json after the time out operation
const usersAfterTimeOut=(cov_2a6kgtu5yv().s[56]++,await readJSON('utils/users.json'));// Find the user in the updated data
const userAfterTimeOut=(cov_2a6kgtu5yv().s[57]++,usersAfterTimeOut.find(user=>{cov_2a6kgtu5yv().f[15]++;cov_2a6kgtu5yv().s[58]++;return user.id===testUserId;}));// Check that the user's time_out property matches the current time before the time out operation
cov_2a6kgtu5yv().s[59]++;expect(userAfterTimeOut.time_out).to.equal(currentTimeBeforeTimeOut);});cov_2a6kgtu5yv().s[60]++;it('should handle updating time for a non-existent user',async function(){cov_2a6kgtu5yv().f[16]++;const invalidUserId=(cov_2a6kgtu5yv().s[61]++,'253235');// Replace with a non-existent user ID
// Mock the request and response objects
const req=(cov_2a6kgtu5yv().s[62]++,{params:{id:invalidUserId}});const res=(cov_2a6kgtu5yv().s[63]++,{status:function(code){cov_2a6kgtu5yv().f[17]++;cov_2a6kgtu5yv().s[64]++;this.statusCode=code;cov_2a6kgtu5yv().s[65]++;return this;},json:function(data){cov_2a6kgtu5yv().f[18]++;cov_2a6kgtu5yv().s[66]++;this.responseData=data;}});// Call the updateUserTimeOut function for a non-existent user
cov_2a6kgtu5yv().s[67]++;await updateUserTimeOut(req,res);// Check the response status code and message
cov_2a6kgtu5yv().s[68]++;expect(res.statusCode).to.equal(404);cov_2a6kgtu5yv().s[69]++;expect(res.responseData.message).to.equal('User not found!');});});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,