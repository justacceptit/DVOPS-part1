function cov_urzx82upj(){var path="C:\\Users\\ryanl\\Documents\\DVOPS_Projects\\project\\DVOPS-part1\\utils\\UserUtil.js";var hash="956d687ed03b4833f053d9b828faf3309d875529";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\ryanl\\Documents\\DVOPS_Projects\\project\\DVOPS-part1\\utils\\UserUtil.js",statementMap:{"0":{start:{line:1,column:17},end:{line:1,column:35}},"1":{start:{line:2,column:17},end:{line:2,column:42}},"2":{start:{line:3,column:11},end:{line:3,column:33}},"3":{start:{line:6,column:2},end:{line:12,column:3}},"4":{start:{line:7,column:17},end:{line:7,column:52}},"5":{start:{line:8,column:4},end:{line:8,column:28}},"6":{start:{line:10,column:4},end:{line:10,column:23}},"7":{start:{line:11,column:4},end:{line:11,column:14}},"8":{start:{line:16,column:2},end:{line:24,column:3}},"9":{start:{line:17,column:23},end:{line:17,column:47}},"10":{start:{line:18,column:4},end:{line:18,column:28}},"11":{start:{line:19,column:4},end:{line:19,column:69}},"12":{start:{line:20,column:4},end:{line:20,column:22}},"13":{start:{line:22,column:4},end:{line:22,column:23}},"14":{start:{line:23,column:4},end:{line:23,column:14}},"15":{start:{line:76,column:4},end:{line:104,column:5}},"16":{start:{line:77,column:17},end:{line:77,column:30}},"17":{start:{line:79,column:23},end:{line:79,column:57}},"18":{start:{line:81,column:24},end:{line:81,column:65}},"19":{start:{line:81,column:51},end:{line:81,column:64}},"20":{start:{line:83,column:6},end:{line:101,column:7}},"21":{start:{line:84,column:29},end:{line:84,column:48}},"22":{start:{line:87,column:8},end:{line:94,column:9}},"23":{start:{line:88,column:34},end:{line:88,column:77}},"24":{start:{line:88,column:58},end:{line:88,column:76}},"25":{start:{line:91,column:10},end:{line:93,column:11}},"26":{start:{line:92,column:12},end:{line:92,column:98}},"27":{start:{line:96,column:8},end:{line:96,column:38}},"28":{start:{line:97,column:8},end:{line:97,column:81}},"29":{start:{line:98,column:8},end:{line:98,column:79}},"30":{start:{line:100,column:8},end:{line:100,column:68}},"31":{start:{line:103,column:6},end:{line:103,column:62}},"32":{start:{line:112,column:4},end:{line:139,column:5}},"33":{start:{line:113,column:19},end:{line:113,column:32}},"34":{start:{line:115,column:25},end:{line:115,column:59}},"35":{start:{line:117,column:26},end:{line:117,column:67}},"36":{start:{line:117,column:53},end:{line:117,column:66}},"37":{start:{line:119,column:8},end:{line:136,column:9}},"38":{start:{line:120,column:25},end:{line:120,column:44}},"39":{start:{line:123,column:12},end:{line:125,column:13}},"40":{start:{line:124,column:16},end:{line:124,column:83}},"41":{start:{line:128,column:12},end:{line:128,column:59}},"42":{start:{line:131,column:12},end:{line:131,column:85}},"43":{start:{line:133,column:12},end:{line:133,column:88}},"44":{start:{line:135,column:12},end:{line:135,column:72}},"45":{start:{line:138,column:8},end:{line:138,column:64}},"46":{start:{line:144,column:0},end:{line:153,column:2}}},fnMap:{"0":{name:"readJSON",decl:{start:{line:5,column:15},end:{line:5,column:23}},loc:{start:{line:5,column:34},end:{line:13,column:1}},line:5},"1":{name:"writeJSON",decl:{start:{line:15,column:15},end:{line:15,column:24}},loc:{start:{line:15,column:43},end:{line:25,column:1}},line:15},"2":{name:"deleteUser",decl:{start:{line:75,column:15},end:{line:75,column:25}},loc:{start:{line:75,column:36},end:{line:105,column:3}},line:75},"3":{name:"(anonymous_3)",decl:{start:{line:81,column:43},end:{line:81,column:44}},loc:{start:{line:81,column:51},end:{line:81,column:64}},line:81},"4":{name:"(anonymous_4)",decl:{start:{line:88,column:50},end:{line:88,column:51}},loc:{start:{line:88,column:58},end:{line:88,column:76}},line:88},"5":{name:"updateUserTime",decl:{start:{line:111,column:17},end:{line:111,column:31}},loc:{start:{line:111,column:42},end:{line:140,column:1}},line:111},"6":{name:"(anonymous_6)",decl:{start:{line:117,column:45},end:{line:117,column:46}},loc:{start:{line:117,column:53},end:{line:117,column:66}},line:117}},branchMap:{"0":{loc:{start:{line:83,column:6},end:{line:101,column:7}},type:"if",locations:[{start:{line:83,column:6},end:{line:101,column:7}},{start:{line:83,column:6},end:{line:101,column:7}}],line:83},"1":{loc:{start:{line:87,column:8},end:{line:94,column:9}},type:"if",locations:[{start:{line:87,column:8},end:{line:94,column:9}},{start:{line:87,column:8},end:{line:94,column:9}}],line:87},"2":{loc:{start:{line:91,column:10},end:{line:93,column:11}},type:"if",locations:[{start:{line:91,column:10},end:{line:93,column:11}},{start:{line:91,column:10},end:{line:93,column:11}}],line:91},"3":{loc:{start:{line:91,column:14},end:{line:91,column:87}},type:"binary-expr",locations:[{start:{line:91,column:14},end:{line:91,column:42}},{start:{line:91,column:46},end:{line:91,column:87}}],line:91},"4":{loc:{start:{line:119,column:8},end:{line:136,column:9}},type:"if",locations:[{start:{line:119,column:8},end:{line:136,column:9}},{start:{line:119,column:8},end:{line:136,column:9}}],line:119},"5":{loc:{start:{line:123,column:12},end:{line:125,column:13}},type:"if",locations:[{start:{line:123,column:12},end:{line:125,column:13}},{start:{line:123,column:12},end:{line:125,column:13}}],line:123}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"956d687ed03b4833f053d9b828faf3309d875529"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_urzx82upj=function(){return actualCoverage;};}return actualCoverage;}cov_urzx82upj();const{time}=(cov_urzx82upj().s[0]++,require('console'));const{User}=(cov_urzx82upj().s[1]++,require('../models/User'));const fs=(cov_urzx82upj().s[2]++,require('fs').promises);async function readJSON(filename){cov_urzx82upj().f[0]++;cov_urzx82upj().s[3]++;try{const data=(cov_urzx82upj().s[4]++,await fs.readFile(filename,'utf8'));cov_urzx82upj().s[5]++;return JSON.parse(data);}catch(err){cov_urzx82upj().s[6]++;console.error(err);cov_urzx82upj().s[7]++;throw err;}}async function writeJSON(object,filename){cov_urzx82upj().f[1]++;cov_urzx82upj().s[8]++;try{const allObjects=(cov_urzx82upj().s[9]++,await readJSON(filename));cov_urzx82upj().s[10]++;allObjects.push(object);cov_urzx82upj().s[11]++;await fs.writeFile(filename,JSON.stringify(allObjects),'utf8');cov_urzx82upj().s[12]++;return allObjects;}catch(err){cov_urzx82upj().s[13]++;console.error(err);cov_urzx82upj().s[14]++;throw err;}}// async function register(req, res) {
//   try {
//       const name=req.body.name;
//       const password=req.body.password;
//       const level=req.body.level;
//       const time_in=req.body.time_in;
//       const date=req.body.date;
//   if (name.length < 3 || password.length < 6) {
//   return res.status(500).json({ message: 'Validation error' });
//   } else {
//   const newUser = new User(name, password,level,time_in,date);
//   const updatedUsers = await writeJSON(newUser, 'utils/users.json');
//   return res.status(201).json(updatedUsers);
//   }
//   } catch (error) {
//   return res.status(500).json({ message: error.message });
//   }
//   }
// // Validation checks done for login
// async function login(req, res) {
//   try {
//     const name = req.body.name; // Renamed from fullname to name
//     const password = req.body.password;
//     const allUsers = await readJSON('utils/users.json');
//     var validCredentials = false;
//     for (var i = 0; i < allUsers.length; i++) {
//       var currUser = allUsers[i];
//       if (currUser.name == name && currUser.password == password) {
//         // Must exist in the database
//         validCredentials = true;
//       }
//     }
//     if (validCredentials) {
//       return res.status(201).json({ message: 'Login successful!' }); // Log In is a success
//     } else {
//       return res.status(500).json({ message: 'Invalid credentials!' }); // Log In is not a success
//     }
//   } catch (error) {
//     return res.status(500).json({ message: error.message });
//   }
// }
async function deleteUser(req,res){cov_urzx82upj().f[2]++;cov_urzx82upj().s[15]++;try{const id=(cov_urzx82upj().s[16]++,req.params.id);const allUsers=(cov_urzx82upj().s[17]++,await readJSON('utils/users.json'));const userIndex=(cov_urzx82upj().s[18]++,allUsers.findIndex(user=>{cov_urzx82upj().f[3]++;cov_urzx82upj().s[19]++;return user.id==id;}));cov_urzx82upj().s[20]++;if(userIndex!==-1){cov_urzx82upj().b[0][0]++;const userToDelete=(cov_urzx82upj().s[21]++,allUsers[userIndex]);// Check if the user has "level" as "2"
cov_urzx82upj().s[22]++;if(userToDelete.level==='2'){cov_urzx82upj().b[1][0]++;const usersWithLevel2=(cov_urzx82upj().s[23]++,allUsers.filter(user=>{cov_urzx82upj().f[4]++;cov_urzx82upj().s[24]++;return user.level==='2';}));// Check if the user to be deleted is the last user with "level" as "2"
cov_urzx82upj().s[25]++;if((cov_urzx82upj().b[3][0]++,usersWithLevel2.length===1)&&(cov_urzx82upj().b[3][1]++,usersWithLevel2[0].id===userToDelete.id)){cov_urzx82upj().b[2][0]++;cov_urzx82upj().s[26]++;return res.status(400).json({message:'Cannot delete the last user with level 2!'});}else{cov_urzx82upj().b[2][1]++;}}else{cov_urzx82upj().b[1][1]++;}cov_urzx82upj().s[27]++;allUsers.splice(userIndex,1);cov_urzx82upj().s[28]++;await fs.writeFile('utils/users.json',JSON.stringify(allUsers),'utf8');cov_urzx82upj().s[29]++;return res.status(201).json({message:'User deleted successfully!'});}else{cov_urzx82upj().b[0][1]++;cov_urzx82upj().s[30]++;return res.status(404).json({message:'User not found!'});}}catch(error){cov_urzx82upj().s[31]++;return res.status(500).json({message:error.message});}}async function updateUserTime(req,res){cov_urzx82upj().f[5]++;cov_urzx82upj().s[32]++;try{const id=(cov_urzx82upj().s[33]++,req.params.id);const allUsers=(cov_urzx82upj().s[34]++,await readJSON('utils/users.json'));const userIndex=(cov_urzx82upj().s[35]++,allUsers.findIndex(user=>{cov_urzx82upj().f[6]++;cov_urzx82upj().s[36]++;return user.id==id;}));cov_urzx82upj().s[37]++;if(userIndex!==-1){cov_urzx82upj().b[4][0]++;const user=(cov_urzx82upj().s[38]++,allUsers[userIndex]);// Check if the user has already timed in
cov_urzx82upj().s[39]++;if(user.time_in){cov_urzx82upj().b[5][0]++;cov_urzx82upj().s[40]++;return res.status(400).json({message:'User already timed in!'});}else{cov_urzx82upj().b[5][1]++;}// Update the "time" property to the current time
cov_urzx82upj().s[41]++;user.time_in=new Date().toLocaleTimeString();// Save the updated users array to the file
cov_urzx82upj().s[42]++;await fs.writeFile('utils/users.json',JSON.stringify(allUsers),'utf8');cov_urzx82upj().s[43]++;return res.status(200).json({message:'User time updated successfully!'});}else{cov_urzx82upj().b[4][1]++;cov_urzx82upj().s[44]++;return res.status(404).json({message:'User not found!'});}}catch(error){cov_urzx82upj().s[45]++;return res.status(500).json({message:error.message});}}cov_urzx82upj().s[46]++;module.exports={readJSON,writeJSON,register,login,deleteUser,updateUserTime};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,