function cov_22cmznycv(){var path="C:\\Users\\ryanl\\Documents\\DVOPS_Projects\\project\\DVOPS-part1\\utils\\GetProfile.js";var hash="505953d29481b4b807482b1b228de93ce5045730";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\ryanl\\Documents\\DVOPS_Projects\\project\\DVOPS-part1\\utils\\GetProfile.js",statementMap:{"0":{start:{line:1,column:32},end:{line:1,column:53}},"1":{start:{line:2,column:17},end:{line:2,column:42}},"2":{start:{line:3,column:10},end:{line:3,column:32}},"3":{start:{line:5,column:4},end:{line:11,column:1}},"4":{start:{line:6,column:27},end:{line:6,column:61}},"5":{start:{line:7,column:8},end:{line:7,column:48}},"6":{start:{line:10,column:4},end:{line:10,column:58}},"7":{start:{line:12,column:0},end:{line:14,column:2}}},fnMap:{"0":{name:"getProfile",decl:{start:{line:4,column:15},end:{line:4,column:25}},loc:{start:{line:4,column:34},end:{line:11,column:2}},line:4}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},f:{"0":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"505953d29481b4b807482b1b228de93ce5045730"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_22cmznycv=function(){return actualCoverage;};}return actualCoverage;}cov_22cmznycv();const{readJSON,writeJSON}=(cov_22cmznycv().s[0]++,require('./UserUtil'));const{User}=(cov_22cmznycv().s[1]++,require('../models/User'));const fs=(cov_22cmznycv().s[2]++,require('fs').promises);async function getProfile(req,res){cov_22cmznycv().f[0]++;cov_22cmznycv().s[3]++;try{const allProfile=(cov_22cmznycv().s[4]++,await readJSON('utils/users.json'));cov_22cmznycv().s[5]++;return res.status(201).json(allProfile);}catch(error){cov_22cmznycv().s[6]++;return res.status(500).json({message:error.message});}}cov_22cmznycv().s[7]++;module.exports={getProfile};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjJjbXpueWN2IiwiYWN0dWFsQ292ZXJhZ2UiLCJyZWFkSlNPTiIsIndyaXRlSlNPTiIsInMiLCJyZXF1aXJlIiwiVXNlciIsImZzIiwicHJvbWlzZXMiLCJnZXRQcm9maWxlIiwicmVxIiwicmVzIiwiZiIsImFsbFByb2ZpbGUiLCJzdGF0dXMiLCJqc29uIiwiZXJyb3IiLCJtZXNzYWdlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIkdldFByb2ZpbGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyByZWFkSlNPTiwgd3JpdGVKU09OIH0gPSByZXF1aXJlKCcuL1VzZXJVdGlsJylcclxuY29uc3QgeyBVc2VyIH0gPSByZXF1aXJlKCcuLi9tb2RlbHMvVXNlcicpXHJcbmNvbnN0IGZzID1yZXF1aXJlKCdmcycpLnByb21pc2VzO1xyXG5hc3luYyBmdW5jdGlvbiBnZXRQcm9maWxlKHJlcSxyZXMpe1xyXG4gICAgdHJ5e1xyXG4gICAgICAgIGNvbnN0IGFsbFByb2ZpbGUgPSBhd2FpdCByZWFkSlNPTigndXRpbHMvdXNlcnMuanNvbicpO1xyXG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMSkuanNvbihhbGxQcm9maWxlKTtcclxuICAgIH1jYXRjaChlcnJvcilcclxue1xyXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHttZXNzYWdlOiBlcnJvci5tZXNzYWdlfSk7XHJcbn19XHJcbm1vZHVsZS5leHBvcnRzPXtcclxuICAgIGdldFByb2ZpbGVcclxufTsiXSwibWFwcGluZ3MiOiIwd0NBZVk7QUFBQUEsYUFBQSxTQUFBQSxDQUFBLFNBQUFDLGNBQUEsV0FBQUEsY0FBQSxFQUFBRCxhQUFBLEdBZlosS0FBTSxDQUFFRSxRQUFRLENBQUVDLFNBQVUsQ0FBQyxFQUFBSCxhQUFBLEdBQUFJLENBQUEsTUFBR0MsT0FBTyxDQUFDLFlBQVksQ0FBQyxFQUNyRCxLQUFNLENBQUVDLElBQUssQ0FBQyxFQUFBTixhQUFBLEdBQUFJLENBQUEsTUFBR0MsT0FBTyxDQUFDLGdCQUFnQixDQUFDLEVBQzFDLEtBQU0sQ0FBQUUsRUFBRSxFQUFBUCxhQUFBLEdBQUFJLENBQUEsTUFBRUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDRyxRQUFRLEVBQ2hDLGNBQWUsQ0FBQUMsVUFBVUEsQ0FBQ0MsR0FBRyxDQUFDQyxHQUFHLENBQUMsQ0FBQVgsYUFBQSxHQUFBWSxDQUFBLE1BQUFaLGFBQUEsR0FBQUksQ0FBQSxNQUM5QixHQUFHLENBQ0MsS0FBTSxDQUFBUyxVQUFVLEVBQUFiLGFBQUEsR0FBQUksQ0FBQSxNQUFHLEtBQU0sQ0FBQUYsUUFBUSxDQUFDLGtCQUFrQixDQUFDLEVBQUNGLGFBQUEsR0FBQUksQ0FBQSxNQUN0RCxNQUFPLENBQUFPLEdBQUcsQ0FBQ0csTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDQyxJQUFJLENBQUNGLFVBQVUsQ0FBQyxDQUMzQyxDQUFDLE1BQU1HLEtBQUssQ0FDaEIsQ0FBQWhCLGFBQUEsR0FBQUksQ0FBQSxNQUNJLE1BQU8sQ0FBQU8sR0FBRyxDQUFDRyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUNDLElBQUksQ0FBQyxDQUFDRSxPQUFPLENBQUVELEtBQUssQ0FBQ0MsT0FBTyxDQUFDLENBQUMsQ0FDekQsQ0FBQyxDQUFDakIsYUFBQSxHQUFBSSxDQUFBLE1BQ0ZjLE1BQU0sQ0FBQ0MsT0FBTyxDQUFDLENBQ1hWLFVBQ0osQ0FBQyJ9